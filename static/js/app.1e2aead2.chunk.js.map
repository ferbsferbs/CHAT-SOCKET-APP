{"version":3,"sources":["src/example.js","App.js","web-build/register-service-worker.js"],"names":["socket","myId","Device","replace","Example","useEffect","io","connect","on","data","user","_id","setMessages","previousMessages","GiftedChat","append","console","warn","useState","messages","onSend","useCallback","emit","App","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"mIAMIA,E,2EAFAC,EAA0B,MAAnBC,IAAwB,QAAQA,IAAkBC,QAAQ,YAAa,KAI3E,SAASC,IAEdC,qBAAU,YAERL,EAASM,IAAGC,QAAQ,uCACbC,GAAG,WAAU,SAAAC,GACfA,EAAKC,KAAKC,KAAKV,GAAKW,GAAY,SAAAC,GAAgB,OAAIC,IAAWC,OAAOF,EAAkBJ,SAI7FT,EAAOQ,GAAG,UAAS,SAAAC,GAClBO,QAAQC,KAAKR,QAKb,IAhBqB,MAiBQS,mBAAS,IAjBjB,WAiBjBC,EAjBiB,KAiBPP,EAjBO,KAqBxBP,qBAAU,WACRO,EAAY,MAEX,IAEH,IAAMQ,EAASC,uBAAY,WAAoB,IAAnBF,EAAkB,uDAAP,GACrCP,GAAY,SAAAC,GAAgB,OAAIC,IAAWC,OAAOF,EAAkBM,MACpEnB,EAAOsB,KAAK,UAAUH,KACrB,IAEH,OACE,kBAAC,IAAD,CACEA,SAAUA,EACVC,OAAQ,SAAAD,GAAQ,OAAIC,EAAOD,IAC3BT,KAAM,CACJC,IAAKV,KCvCE,SAASsB,IACtB,OAEE,kBAACnB,EAAD,MDHJH,GAAU,MCQKuB,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,a,+DChBhB,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0CAA2C,CAAEC,MAAO,sBAC7DC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfxB,QAAQsB,KAAK,oCAAqCE,W","file":"static/js/app.1e2aead2.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { GiftedChat } from 'react-native-gifted-chat'\nimport * as Device from 'expo-device';\nimport io from 'socket.io-client/dist/socket.io';\nvar myId = Device.deviceName==null?\"NULL_\":Device.deviceName.replace(/[^\\w\\s]/gi, '_')\nmyId=myId+\"Web\"\nvar socket;\n\nexport function Example() {\n\n  useEffect(() => {\n\n    socket = io.connect('http://maraton-leer.sytes.net:3003')\n    socket.on('message',data=>{\n      if(data.user._id!=myId)setMessages(previousMessages => GiftedChat.append(previousMessages, data))\n      \n    })\n\n    socket.on('getAll',data=>{\n     console.warn(data)\n      \n    })\n\n\n  }, [])\n  const [messages, setMessages] = useState([]);\n\n\n\n  useEffect(() => {\n    setMessages([\n    ])\n  }, [])\n\n  const onSend = useCallback((messages = []) => {\n    setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n    socket.emit('message',messages )\n  }, [])\n\n  return (\n    <GiftedChat\n      messages={messages}\n      onSend={messages => onSend(messages)}\n      user={{\n        _id: myId,\n      }}\n    />\n  )\n}","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Example } from './src/example';\n\nexport default function App() {\n  return (\n   \n    <Example></Example>\n \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/CHAT-SOCKET-APP/expo-service-worker.js', { scope: '/CHAT-SOCKET-APP/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}